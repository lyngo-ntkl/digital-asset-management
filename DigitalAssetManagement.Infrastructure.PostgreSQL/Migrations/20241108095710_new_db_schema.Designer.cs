// <auto-generated />
using System;
using DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DigitalAssetManagement.Infrastructure.PostgreSQL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241108095710_new_db_schema")]
    partial class new_db_schema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "metadata_type", new[] { "file", "folder", "drive" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "role", new[] { "admin", "contributor", "reader" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.Metadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AbsolutePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AbsolutePath")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.HasIndex("ParentId");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MetadataId")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MetadataId");

                    b.HasIndex("UserId", "MetadataId")
                        .IsUnique();

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.PermissionRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MetadataId")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MetadataId");

                    b.HasIndex("UserId", "MetadataId")
                        .IsUnique();

                    b.ToTable("PermissionRequests");
                });

            modelBuilder.Entity("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.Metadata", b =>
                {
                    b.HasOne("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.User", "Owner")
                        .WithMany("Metadata")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.Metadata", "ParentMetadata")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Owner");

                    b.Navigation("ParentMetadata");
                });

            modelBuilder.Entity("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.Permission", b =>
                {
                    b.HasOne("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.Metadata", "Metadata")
                        .WithMany("Permissions")
                        .HasForeignKey("MetadataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.User", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Metadata");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.PermissionRequest", b =>
                {
                    b.HasOne("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.Metadata", "Metadata")
                        .WithMany("PermissionRequests")
                        .HasForeignKey("MetadataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.User", "User")
                        .WithMany("PermissionRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Metadata");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.Metadata", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("PermissionRequests");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("DigitalAssetManagement.Infrastructure.PostgreSQL.DatabaseContext.User", b =>
                {
                    b.Navigation("Metadata");

                    b.Navigation("PermissionRequests");

                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
